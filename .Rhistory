setwd("C:/Users/rache/Desktop/UBS")
install.packages("tidycensus")
install.packages(c("tidyverse", "leaflet", "sf", "viridis", "styler"))
knitr::opts_chunk$set(
message = FALSE,
echo = TRUE,
warning = FALSE
)
library(tidycensus)
library(tidyverse)
library(leaflet)
library(sf)
library(viridis)
library(styler)
options(tigris_use_cache = TRUE)
# The website says the Amcerican Community Survey (ACS) has their most recent data set as 2014-2018. The ACS includesvariables on social, economic, housing, and demographic aspects. It has 25,070 variables.
var <- load_variables(year = 2012, dataset = "acs5")
# Finding the demographic variables and renaming them in a list
demo_varsacs5 <- c(
associates = "B15003_021",
bachelors = "B15003_022",
poverty = "B17001_002",
female = "B01001_026",
male = "B01001_002",
diff_stateHouse = "B07013_014",
diff_stateRent = "B07013_015",
diff_countyHouse = "B07013_011",
diff_countyRent = "B07013_012",
house_val = "B25107_001",
self_income = "B19053_002",
health_ins = 'B27001_001',
public_ins = "B27003_001",
income = "B06011_001",
male_car = "B08006_019",
female_car = "B08006_036"
)
# Chunk 1: setup
knitr::opts_chunk$set(
message = FALSE,
echo = TRUE,
warning = FALSE
)
library(tidycensus)
library(tidyverse)
library(leaflet)
library(sf)
library(viridis)
library(styler)
options(tigris_use_cache = TRUE)
# Chunk 2
# The website says the Amcerican Community Survey (ACS) has their most recent data set as 2014-2018. The ACS includesvariables on social, economic, housing, and demographic aspects. It has 25,070 variables.
var <- load_variables(year = 2012, dataset = "acs5")
# Chunk 3
# Finding the demographic variables and renaming them in a list
demo_varsacs5 <- c(
associates = "B15003_021",
bachelors = "B15003_022",
poverty = "B17001_002",
female = "B01001_026",
male = "B01001_002",
diff_stateHouse = "B07013_014",
diff_stateRent = "B07013_015",
diff_countyHouse = "B07013_011",
diff_countyRent = "B07013_012",
house_val = "B25107_001",
self_income = "B19053_002",
health_ins = 'B27001_001',
public_ins = "B27003_001",
income = "B06011_001",
male_car = "B08006_019",
female_car = "B08006_036"
)
# Chunk 4
# We have to use tracts so that we can get geographical information using sf are leaflet
nj_demo_tracts <- get_acs(
state = "NJ",
geography = "tract",
variables = demo_varsacs5,
# Use 2014 as year for more recent data
year = 2012,
geometry = TRUE,
keep_geo_vars = TRUE
) %>%
# 4326 is most common map form
st_transform(4326)
# Chunk 5
# Function to create tracts
tracts_func <- function(data, county_n, var_n) {
data %>%
# Filters the county
filter(COUNTYFP == county_n) %>%
# Filters for the variable from our variable list
filter(variable == var_n)
}
# Chunk 6
#Function to pull variable from all tracts in NJ
alco_func <- function(var_n){
nj_demo_tracts %>%
filter(COUNTYFP == "001"
| COUNTYFP == "003"
| COUNTYFP == "005"
| COUNTYFP == "009"
| COUNTYFP == "007"
| COUNTYFP == "011"
| COUNTYFP == "013"
| COUNTYFP == "015"
| COUNTYFP == "017"
| COUNTYFP == "019"
| COUNTYFP == "021"
| COUNTYFP == "023"
| COUNTYFP == "025"
| COUNTYFP == "027"
| COUNTYFP == "029"
| COUNTYFP == "031"
| COUNTYFP == "033"
| COUNTYFP == "035"
| COUNTYFP == "037"
| COUNTYFP == "039"
| COUNTYFP == "041") %>%
filter(variable == var_n)
}
# Chunk 7
#function to color the map. takes in string color pallette and mapping variable
pal_func <- function(color, var_name){
colorNumeric(
palette = color,
domain = var_name$estimate,
reverse = TRUE
)
}
# Chunk 8
nj_pop <- nj_demo_tracts %>%
filter(COUNTYFP == "001"
| COUNTYFP == "003"
| COUNTYFP == "005"
| COUNTYFP == "009"
| COUNTYFP == "007"
| COUNTYFP == "011"
| COUNTYFP == "013"
| COUNTYFP == "015"
| COUNTYFP == "017"
| COUNTYFP == "019"
| COUNTYFP == "021"
| COUNTYFP == "023"
| COUNTYFP == "025"
| COUNTYFP == "027"
| COUNTYFP == "029"
| COUNTYFP == "031"
| COUNTYFP == "033"
| COUNTYFP == "035"
| COUNTYFP == "037"
| COUNTYFP == "039"
| COUNTYFP == "041") %>%
select(-(moe)) %>%
spread(key = variable, value = estimate)  %>%
mutate(estimate = female + male)
nj_pop
# Chunk 9
drop = c("associates",
"bachelors",
"poverty",
"diff_stateHouse",
"diff_stateRent",
"diff_countyHouse",
"diff_countyRent",
"house_val",
"self_income",
"health_ins",
"income",
"male_car",
"female_car",
"pharm",
"female",
"male",
"population")
nj_pop <- nj_pop[,!(names(nj_pop) %in% drop)]
# Chunk 10
car <- nj_demo_tracts %>%
filter(COUNTYFP == "001"
| COUNTYFP == "003"
| COUNTYFP == "005"
| COUNTYFP == "009"
| COUNTYFP == "007"
| COUNTYFP == "011"
| COUNTYFP == "013"
| COUNTYFP == "015"
| COUNTYFP == "017"
| COUNTYFP == "019"
| COUNTYFP == "021"
| COUNTYFP == "023"
| COUNTYFP == "025"
| COUNTYFP == "027"
| COUNTYFP == "029"
| COUNTYFP == "031"
| COUNTYFP == "033"
| COUNTYFP == "035"
| COUNTYFP == "037"
| COUNTYFP == "039"
| COUNTYFP == "041") %>%
select(-(moe)) %>%
spread(key = variable, value = estimate)  %>%
mutate(estimate = female_car + male_car)
car
# Chunk 11
drop = c("associates",
"bachelors",
"poverty",
"diff_stateHouse",
"diff_stateRent",
"diff_countyHouse",
"diff_countyRent",
"house_val",
"self_income",
"health_ins",
"income",
"male_car",
"female_car",
"pharm",
"female",
"male",
"population")
car <- nj_pop[,!(names(nj_pop) %in% drop)]
# Chunk 12
# Function for creating leaflet map
map_func <- function(data, title, title2) {
data %>%
leaflet(width = "100%") %>%
addProviderTiles(provider = "CartoDB.Positron") %>%
addPolygons(
label = ~ str_extract(NAME.y, "^([^,]*)"),
stroke = FALSE,
smoothFactor = 0,
fillOpacity = 0.7,
color = ~ pal(estimate)
) %>%
addLegend("bottomright",
pal = pal,
values = ~estimate,
title = title,
opacity = 1
) %>%
addControl(title2, position = "topright")
}
# Chunk 13
# Read in Museums
m <- read.csv(file = "~/Desktop/UBS/m.csv")
m <- subset(m, m$State..Administrative.Location. == "NJ" & m$State.Code..FIPS. == 34)
head(m)
# Chunk 14
poverty <- alco_func("poverty")
poverty
# Chunk 15
bachelors <- alco_func("bachelors")
bachelors
# Chunk 16
associates <- alco_func("associates")
associates
# Chunk 17
house_val <- alco_func("house_val")
house_val
# Chunk 18
# Creating pallette to use with leaflet
pal <- pal_func("viridis", nj_pop)
map_func(nj_pop, "Nubmer of People (Ones)", "Population in New Jersey")
# Chunk 19
health_ins <- alco_func("health_ins")
health_ins
# Chunk 20
income <- alco_func("income")
income
# Chunk 21
# Creating pallette to use with leaflet
pal <- pal_func("viridis", income)
#map_func(income, "income", "income")
income_map <- income %>%
leaflet(width = "100%") %>%
addProviderTiles(provider = "CartoDB.Positron") %>%
addPolygons(
label = ~ str_extract(NAME.y, "^([^,]*)"),
stroke = FALSE,
smoothFactor = 0,
fillOpacity = 0.7,
color = ~ pal(estimate)
) %>%
addLegend("bottomright",
pal = pal,
values = ~estimate,
title = "Income (Dollars)",
opacity = 1
) %>%
# Adding the museums
addControl("Median Income in New Jersey", position = "topright") %>%
addCircleMarkers(
lng= m$Longitude, lat= m$Latitude, radius = 1,
label= m$Museum.Name,
labelOptions = labelOptions(direction = 'bottom',
offset=c(0,15)))
income_map
# Chunk 22
# Creating pallette to use with leaflet
pal <- pal_func("viridis", car)
map_func(car, "Number of Cars (Ones)", "Number of Cars Owned in New Jersey")
# Chunk 23
self_income <- alco_func("self_income")
self_income
# Chunk 24
# Creating pallette to use with leaflet
pal <- pal_func("viridis", self_income)
map_func(self_income, "Number of People (Ones)", "Number of People Who Reported to Having Self-Income")
# Chunk 25
diff_stateHouse <- alco_func("diff_stateHouse")
diff_stateHouse
# Chunk 26
# Creating pallette to use with leaflet
pal <- pal_func("viridis", diff_stateHouse)
map_func(diff_stateHouse, "Number of People (Ones)", "Number of People who Moved from a Different State and Now Live in a House")
# Chunk 27
diff_stateRent <- alco_func("diff_stateRent")
diff_stateRent
# Chunk 28
# Creating pallette to use with leaflet
pal <- pal_func("viridis", diff_stateRent)
map_func(diff_stateRent, "Number of People (Ones)", "Number of People who Moved from a Different State and Now Live in a Rental Unit")
# Chunk 29
diff_countyHouse <- alco_func("diff_countyHouse")
diff_countyHouse
# Chunk 30
# Creating pallette to use with leaflet
pal <- pal_func("viridis", diff_countyHouse)
map_func(diff_countyHouse, "Number of People (Ones)", "Number of People who Moved from a Different County and Now Live in a House")
# The website says the Amcerican Community Survey (ACS) has their most recent data set as 2014-2018. The ACS includesvariables on social, economic, housing, and demographic aspects. It has 25,070 variables.
var <- load_variables(year = 2012, dataset = "acs5")
# The website says the Amcerican Community Survey (ACS) has their most recent data set as 2014-2018. The ACS includesvariables on social, economic, housing, and demographic aspects. It has 25,070 variables.
var <- load_variables(year = 2012, dataset = "acs1")
# Finding the demographic variables and renaming them in a list
demo_varsacs5 <- c(
associates = "B15003_021",
bachelors = "B15003_022",
poverty = "B17001_002",
female = "B01001_026",
male = "B01001_002",
diff_stateHouse = "B07013_014",
diff_stateRent = "B07013_015",
diff_countyHouse = "B07013_011",
diff_countyRent = "B07013_012",
house_val = "B25107_001",
self_income = "B19053_002",
health_ins = 'B27001_001',
public_ins = "B27003_001",
income = "B06011_001",
male_car = "B08006_019",
female_car = "B08006_036"
)
# We have to use tracts so that we can get geographical information using sf are leaflet
nj_demo_tracts <- get_acs(
state = "NJ",
geography = "tract",
variables = demo_varsacs5,
# Use 2014 as year for more recent data
year = 2012,
geometry = TRUE,
keep_geo_vars = TRUE
) %>%
# 4326 is most common map form
st_transform(4326)
census_api_key(e66efce57685a6c8948518321300bcb6e0088479, overwrite = FALSE, install = FALSE)
census_api_key(e66efce57685a6c8948518321300bcb6e0088479, overwrite = FALSE, install = TRUE)
census_api_key('e66efce57685a6c8948518321300bcb6e0088479', overwrite = FALSE, install = TRUE)
