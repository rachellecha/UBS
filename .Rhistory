health_ins
# Chunk 20
income <- alco_func("income")
income
# Chunk 21
# Creating pallette to use with leaflet
pal <- pal_func("viridis", income)
#map_func(income, "income", "income")
income_map <- income %>%
leaflet(width = "100%") %>%
addProviderTiles(provider = "CartoDB.Positron") %>%
addPolygons(
label = ~ str_extract(NAME.y, "^([^,]*)"),
stroke = FALSE,
smoothFactor = 0,
fillOpacity = 0.7,
color = ~ pal(estimate)
) %>%
addLegend("bottomright",
pal = pal,
values = ~estimate,
title = "Income (Dollars)",
opacity = 1
) %>%
# Adding the museums
addControl("Median Income in New Jersey", position = "topright") %>%
addCircleMarkers(
lng= m$Longitude, lat= m$Latitude, radius = 1,
label= m$Museum.Name,
labelOptions = labelOptions(direction = 'bottom',
offset=c(0,15)))
income_map
# Chunk 22
# Creating pallette to use with leaflet
pal <- pal_func("viridis", car)
map_func(car, "Number of Cars (Ones)", "Number of Cars Owned in New Jersey")
# Chunk 23
self_income <- alco_func("self_income")
self_income
# Chunk 24
# Creating pallette to use with leaflet
pal <- pal_func("viridis", self_income)
map_func(self_income, "Number of People (Ones)", "Number of People Who Reported to Having Self-Income")
# Chunk 25
diff_stateHouse <- alco_func("diff_stateHouse")
diff_stateHouse
# Chunk 26
# Creating pallette to use with leaflet
pal <- pal_func("viridis", diff_stateHouse)
map_func(diff_stateHouse, "Number of People (Ones)", "Number of People who Moved from a Different State and Now Live in a House")
# Chunk 27
diff_stateRent <- alco_func("diff_stateRent")
diff_stateRent
# Chunk 28
# Creating pallette to use with leaflet
pal <- pal_func("viridis", diff_stateRent)
map_func(diff_stateRent, "Number of People (Ones)", "Number of People who Moved from a Different State and Now Live in a Rental Unit")
# Chunk 29
diff_countyHouse <- alco_func("diff_countyHouse")
diff_countyHouse
# Chunk 30
# Creating pallette to use with leaflet
pal <- pal_func("viridis", diff_countyHouse)
map_func(diff_countyHouse, "Number of People (Ones)", "Number of People who Moved from a Different County and Now Live in a House")
# Chunk 31
diff_countyRent <- alco_func("diff_countyRent")
diff_countyRent
# making a table out of this stuff
names(poverty)[6] <- "census_tract"
names(poverty)[10] <- "full_name"
names(poverty)[12] <- "poverty"
poverty <- select(poverty, census_tract, full_name, poverty)
poverty$geometry <- NULL
poverty
names(bachelors)[10] <- "full_name"
names(bachelors)[12] <- "bachelors"
bachelors <- select(bachelors, full_name, bachelors)
bachelors$geometry <- NULL
bachelors
poverty <- merge(poverty, bachelors, by = "full_name")
names(associates)[10] <- "full_name"
names(associates)[12] <- "associates"
associates$geometry <- NULL
associates <- select(associates, associates, full_name)
associates
poverty <- merge(poverty, associates, by = "full_name")
View(car)
View(nj_pop)
names(car)[10] <- "full_name"
names(car)[13] <- "car"
car$geometry <- NULL
car <- select(car, full_name, car)
names(diff_countyHouse)[10] <- "full_name"
names(diff_countyHouse)[12] <- "diff_countyHouse"
diff_countyHouse$geometry <- NULL
diff_countyHouse <- select(diff_countyHouse, full_name, diff_countyHouse)
names(diff_countyRent)[10] <- "full_name"
names(diff_countyRent)[12] <- "diff_countyRent"
diff_countyRent$geometry <- NULL
diff_countyRent <- select(diff_countyRent, full_name, diff_countyRent)
names(diff_stateRent)[10] <- "full_name"
names(diff_stateRent)[12] <- "diff_stateRent"
diff_stateRent$geometry <- NULL
diff_stateRent <- select(diff_stateRent, full_name, diff_stateRent)
names(diff_stateHouse)[10] <- "full_name"
names(diff_stateHouse)[12] <- "diff_stateHouse"
diff_stateHouse$geometry <- NULL
diff_stateHouse <- select(diff_stateHouse, full_name, diff_stateHouse)
names(health_ins)[10] <- "full_name"
names(health_ins)[12] <- "health_ins"
health_ins$geometry <- NULL
health_ins <- select(health_ins, full_name, health_ins)
names(house_val)[10] <- "full_name"
names(house_val)[12] <- "house_val"
house_val$geometry <- NULL
house_val <- select(house_val, full_name, house_val)
names(nj_pop)[10] <- "full_name"
names(nj_pop)[13] <- "population"
nj_pop$geometry <- NULL
nj_pop <- select(nj_pop, full_name, population)
names(self_income)[10] <- "full_name"
names(self_income)[12] <- "self_income"
self_income$geometry <- NULL
self_income <- select(self_income, full_name, self_income)
poverty <- merge(poverty, car, by = "full_name")
poverty <- merge(poverty, diff_countyHouse, by = "full_name")
poverty <- merge(poverty, diff_countyRent, by = "full_name")
poverty <- merge(poverty, diff_stateHouse, by = "full_name")
poverty <- merge(poverty, diff_stateRent, by = "full_name")
poverty <- merge(poverty, health_ins, by = "full_name")
poverty <- merge(poverty, house_val, by = "full_name")
poverty <- merge(poverty, nj_pop, by = "full_name")
poverty <- merge(poverty, self_income, by = "full_name")
poverty$museums <- NA
poverty$museums <- 0
poverty$museums <- NA
poverty$score <- NA
write.csv(poverty, "/Users/rachellecha/Desktop/UBS/UBSdata.csv", row.names = FALSE)
View(var)
View(poverty)
knitr::opts_chunk$set(
message = FALSE,
echo = TRUE,
warning = FALSE
)
library(tidycensus)
library(tidyverse)
library(leaflet)
library(sf)
library(viridis)
library(styler)
options(tigris_use_cache = TRUE)
# The website says the Amcerican Community Survey (ACS) has their most recent data set as 2014-2018. The ACS includesvariables on social, economic, housing, and demographic aspects. It has 25,070 variables.
var <- load_variables(year = 2018, dataset = "acs5")
#create df that's just the ages
#take median across the row
age <- c(
mUnder5 = "B01001_003",
m5to9 = "B01001_004",
m10to14 = "B01001_005",
m11to17 = "B01001_006",
m18to19 = "B01001_007",
m20 = "B01001_008",
m21 = "B01001_009",
m22to24 = "B01001_010",
m25to29 = "B01001_011",
m30to34 = "B01001_012",
m35to39 = "B01001_013",
m40to44 = "B01001_014",
m45to49 = "B01001_015",
m50to54 = "B01001_016",
m55to59 = "B01001_017",
m60to61 = "B01001_018",
m62to64 = "B01001_019",
m65to66 = "B01001_020",
m67to69 = "B01001_021",
m70to74 = "B01001_022",
m75to79 = "B01001_023",
m80to84 = "B01001_024",
mOver85 = "B01001_025",
fUnder5 = "B01001_027",
f5to9 = "B01001_028",
f10to14 = "B01001_029",
f11to17 = "B01001_030",
f18to19 = "B01001_031",
f20 = "B01001_032",
f21 = "B01001_033",
f22to24 = "B01001_034",
f25to29 = "B01001_035",
f30to34 = "B01001_036",
f35to39 = "B01001_037",
f40to44 = "B01001_038",
f45to49 = "B01001_039",
f50to54 = "B01001_040",
f55to59 = "B01001_041",
f60to61 = "B01001_042",
f62to64 = "B01001_043",
f65to66 = "B01001_044",
f67to69 = "B01001_045",
f70to74 = "B01001_046",
f75to79 = "B01001_047",
f80to84 = "B01001_048",
fOver85 = "B01001_049",
)
#create df that's just the ages
#take median across the row
age <- c(
mUnder5 = "B01001_003",
m5to9 = "B01001_004",
m10to14 = "B01001_005",
m11to17 = "B01001_006",
m18to19 = "B01001_007",
m20 = "B01001_008",
m21 = "B01001_009",
m22to24 = "B01001_010",
m25to29 = "B01001_011",
m30to34 = "B01001_012",
m35to39 = "B01001_013",
m40to44 = "B01001_014",
m45to49 = "B01001_015",
m50to54 = "B01001_016",
m55to59 = "B01001_017",
m60to61 = "B01001_018",
m62to64 = "B01001_019",
m65to66 = "B01001_020",
m67to69 = "B01001_021",
m70to74 = "B01001_022",
m75to79 = "B01001_023",
m80to84 = "B01001_024",
mOver85 = "B01001_025",
fUnder5 = "B01001_027",
f5to9 = "B01001_028",
f10to14 = "B01001_029",
f11to17 = "B01001_030",
f18to19 = "B01001_031",
f20 = "B01001_032",
f21 = "B01001_033",
f22to24 = "B01001_034",
f25to29 = "B01001_035",
f30to34 = "B01001_036",
f35to39 = "B01001_037",
f40to44 = "B01001_038",
f45to49 = "B01001_039",
f50to54 = "B01001_040",
f55to59 = "B01001_041",
f60to61 = "B01001_042",
f62to64 = "B01001_043",
f65to66 = "B01001_044",
f67to69 = "B01001_045",
f70to74 = "B01001_046",
f75to79 = "B01001_047",
f80to84 = "B01001_048",
fOver85 = "B01001_049"
)
mUnder5 <- alco_func("mUnder5")
mUnder5
m5to9 <- alco_func("m5to9")
m5to9
m10to14 <- alco_func("m10to14")
m10to14
m11to17 <- alco_func("m11to17")
m11to17
m18to19 <- alco_func("m18to19")
m18to19
var2019 <- load_variables(year = 2019, dataset = "acs5")
var2019 <- get_acs(geography = "place", state = "NJ", survey = "acs1", year = 2019)
var2019 <- get_acs(geography = "place", state = "NJ", survey = "acs1", year = 2019, table = "B01001_003")
var2019 <- get_acs(geography = "tract", state = "34", survey = "acs1", year = 2019, variables = "age")
var2019 <- get_acs(geography = "tract", state = "34", year = 2019, variables = "age")
var2019 <- get_acs(geography = "tract", state = "34", year = 2018, variables = "age")
#create df that's just the ages
#take median across the row
age <- c(
mUnder5 = "B01001_003",
m5to9 = "B01001_004",
m10to14 = "B01001_005",
m11to17 = "B01001_006",
m18to19 = "B01001_007",
m20 = "B01001_008",
m21 = "B01001_009",
m22to24 = "B01001_010",
m25to29 = "B01001_011",
m30to34 = "B01001_012",
m35to39 = "B01001_013",
m40to44 = "B01001_014",
m45to49 = "B01001_015",
m50to54 = "B01001_016",
m55to59 = "B01001_017",
m60to61 = "B01001_018",
m62to64 = "B01001_019",
m65to66 = "B01001_020",
m67to69 = "B01001_021",
m70to74 = "B01001_022",
m75to79 = "B01001_023",
m80to84 = "B01001_024",
mOver85 = "B01001_025",
fUnder5 = "B01001_027",
f5to9 = "B01001_028",
f10to14 = "B01001_029",
f11to17 = "B01001_030",
f18to19 = "B01001_031",
f20 = "B01001_032",
f21 = "B01001_033",
f22to24 = "B01001_034",
f25to29 = "B01001_035",
f30to34 = "B01001_036",
f35to39 = "B01001_037",
f40to44 = "B01001_038",
f45to49 = "B01001_039",
f50to54 = "B01001_040",
f55to59 = "B01001_041",
f60to61 = "B01001_042",
f62to64 = "B01001_043",
f65to66 = "B01001_044",
f67to69 = "B01001_045",
f70to74 = "B01001_046",
f75to79 = "B01001_047",
f80to84 = "B01001_048",
fOver85 = "B01001_049"
)
var2019 <- get_acs(geography = "tract", state = "34", year = 2018, variables = "age")
#create df that's just the ages
#take median across the row
age <- c(
mUnder5 = "B01001_003",
m5to9 = "B01001_004",
m10to14 = "B01001_005",
m11to17 = "B01001_006",
m18to19 = "B01001_007",
m20 = "B01001_008",
m21 = "B01001_009",
m22to24 = "B01001_010",
m25to29 = "B01001_011",
m30to34 = "B01001_012",
m35to39 = "B01001_013",
m40to44 = "B01001_014",
m45to49 = "B01001_015",
m50to54 = "B01001_016",
m55to59 = "B01001_017",
m60to61 = "B01001_018",
m62to64 = "B01001_019",
m65to66 = "B01001_020",
m67to69 = "B01001_021",
m70to74 = "B01001_022",
m75to79 = "B01001_023",
m80to84 = "B01001_024",
mOver85 = "B01001_025",
fUnder5 = "B01001_027",
f5to9 = "B01001_028",
f10to14 = "B01001_029",
f11to17 = "B01001_030",
f18to19 = "B01001_031",
f20 = "B01001_032",
f21 = "B01001_033",
f22to24 = "B01001_034",
f25to29 = "B01001_035",
f30to34 = "B01001_036",
f35to39 = "B01001_037",
f40to44 = "B01001_038",
f45to49 = "B01001_039",
f50to54 = "B01001_040",
f55to59 = "B01001_041",
f60to61 = "B01001_042",
f62to64 = "B01001_043",
f65to66 = "B01001_044",
f67to69 = "B01001_045",
f70to74 = "B01001_046",
f75to79 = "B01001_047",
f80to84 = "B01001_048",
fOver85 = "B01001_049"
)
var2019 <- get_acs(geography = "tract", state = "34", year = 2018, variables = "age")
#create df that's just the ages
#take median across the row
age <- c(
mUnder5 = "B01001_003",
m5to9 = "B01001_004",
m10to14 = "B01001_005",
m11to17 = "B01001_006",
m18to19 = "B01001_007",
m20 = "B01001_008",
m21 = "B01001_009",
m22to24 = "B01001_010",
m25to29 = "B01001_011",
m30to34 = "B01001_012",
m35to39 = "B01001_013",
m40to44 = "B01001_014",
m45to49 = "B01001_015",
m50to54 = "B01001_016",
m55to59 = "B01001_017",
m60to61 = "B01001_018",
m62to64 = "B01001_019",
m65to66 = "B01001_020",
m67to69 = "B01001_021",
m70to74 = "B01001_022",
m75to79 = "B01001_023",
m80to84 = "B01001_024",
mOver85 = "B01001_025",
fUnder5 = "B01001_027",
f5to9 = "B01001_028",
f10to14 = "B01001_029",
f11to17 = "B01001_030",
f18to19 = "B01001_031",
f20 = "B01001_032",
f21 = "B01001_033",
f22to24 = "B01001_034",
f25to29 = "B01001_035",
f30to34 = "B01001_036",
f35to39 = "B01001_037",
f40to44 = "B01001_038",
f45to49 = "B01001_039",
f50to54 = "B01001_040",
f55to59 = "B01001_041",
f60to61 = "B01001_042",
f62to64 = "B01001_043",
f65to66 = "B01001_044",
f67to69 = "B01001_045",
f70to74 = "B01001_046",
f75to79 = "B01001_047",
f80to84 = "B01001_048",
fOver85 = "B01001_049"
)
ages <- get_acs(
state = "NJ",
geography = "tract",
variables = age,
# Use 2018 as year for more recent data
year = 2018,
geometry = FALSE,
keep_geo_vars = FALSE
)
View(ages)
a <- function(var_n){
ages %>%
filter(COUNTYFP == "001"
| COUNTYFP == "003"
| COUNTYFP == "005"
| COUNTYFP == "009"
| COUNTYFP == "007"
| COUNTYFP == "011"
| COUNTYFP == "013"
| COUNTYFP == "015"
| COUNTYFP == "017"
| COUNTYFP == "019"
| COUNTYFP == "021"
| COUNTYFP == "023"
| COUNTYFP == "025"
| COUNTYFP == "027"
| COUNTYFP == "029"
| COUNTYFP == "031"
| COUNTYFP == "033"
| COUNTYFP == "035"
| COUNTYFP == "037"
| COUNTYFP == "039"
| COUNTYFP == "041") %>%
filter(variable == var_n)
}
mUnder5 <- a("mUnder5")
mUnder5
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidycensus)
library(tidyverse)
library(tigris)
library(leaflet)
library(sf)
library(viridis)
library(styler)
library(DT)
library(readr)
library(ggthemes)
library(patchwork)
library(rprojroot)
library(lubridate)
library(readxl)
library(stringr)
options(tigris_use_cache = TRUE)
ZIP_TRACT_062020 <- read_excel("~/UBS/ZIP_TRACT_062020.xlsx")
View(ZIP_TRACT_062020)
setwd("~/Desktop/UBS")
ZIP_TRACT_062020 <- read_excel("~/UBS/ZIP_TRACT_062020.xlsx")
View(ZIP_TRACT_062020)
ZIP_TRACT_062020 <- read_excel("Desktop/UBS/ZIP_TRACT_062020.xlsx")
View(ZIP_TRACT_062020)
ZIP_TRACT_062020 <- read_excel("rachellecha/Desktop/UBS/ZIP_TRACT_062020.xlsx")
View(ZIP_TRACT_062020)
ZIP_TRACT_062020 <- read_excel("/Users/rachellecha/Desktop/UBS/ZIP_TRACT_062020.xlsx")
View(ZIP_TRACT_062020)
table_function <- function(data) {
DT::datatable(
data,
style = "default",
class = "compact stripe",
colnames = c("Zip Codes" = "ZIP",
"Tracts" = "TRACT"),
options=list(
columnDefs = list(list(visible=FALSE)),
list(className = "dt-center"),
initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#ec746c', 'color': '#fff'});",
"}")),
filter = "top"
)
}
zip_tract_select <- ZIP_TRACT_062020 %>%
filter(str_detect(TRACT, "^34")) %>%
select(-RES_RATIO, -BUS_RATIO, -OTH_RATIO, -TOT_RATIO)
table_function(zip_tract_select)
